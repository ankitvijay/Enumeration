# name: CI

# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]

# defaults:
#   run:
#     working-directory: src

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Fetch all history for all tags and branches
#       run: git fetch --prune --unshallow

#     - name: Install GitVersion
#       uses: gittools/actions/gitversion/setup@v0.9.2
#       with:
#         versionSpec: '5.2.x'

#     - name: Use GitVersion
#       id: gitversion # step id used as reference for output values
#       uses: gittools/actions/gitversion/execute@v0.9.2
#     - run: |
#           echo "Major: ${{ steps.gitversion.outputs.major }}"
#           echo "Minor: ${{ steps.gitversion.outputs.minor }}"
#           echo "Patch: ${{ steps.gitversion.outputs.patch }}"
#           echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
#           echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
#           echo "NuGetVersion: ${{ steps.gitversion.outputs.nuGetVersion }}"
#           echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}"
#           echo "NuGetPreReleaseTag: ${{ steps.gitversion.outputs.nuGetPreReleaseTag }}"
#           echo "VersionSourceSha: ${{ steps.gitversion.outputs.versionSourceSha }}"
#           echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
#           echo "CommitsSinceVersionSourcePadded: ${{ steps.gitversion.outputs.commitsSinceVersionSourcePadded }}"
#           echo "CommitDate: ${{ steps.gitversion.outputs.commitDate }}"

#     - name: Setup .NET Core
#       uses: actions/setup-dotnet@v1
#       with:
#         dotnet-version: 3.1.101

#     - name: Install dependencies
#       run: dotnet restore

#     - name: Build
#       run: dotnet build --configuration Release --no-restore

#     - name: Test
#       run: dotnet test --configuration Release --no-build --verbosity normal

#     - name: Nuget Pack - Enumeration Project
#       if: ${{ github.event_name == 'push' }}
#       run: dotnet pack Enumeration/Enumeration.csproj --configuration Release --no-build -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersionV2 }} -o output

#     - name: Nuget Pack - Enumeration.JsonNet Project
#       if: ${{ github.event_name == 'push' }}
#       run: dotnet pack Enumeration.JsonNet/Enumeration.JsonNet.csproj --configuration Release --no-build -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersionV2 }} -o output

#     - name: Nuget Pack - Enumeration.ModelBinder Project
#       if: ${{ github.event_name == 'push' }}
#       run: dotnet pack Enumeration.ModelBinder/Enumeration.ModelBinder.csproj --configuration Release --no-build -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersionV2 }} -o output

#     - name: Upload artifact
#       if: ${{ github.event_name == 'push' }}
#       uses: actions/upload-artifact@v1.0.0
#       with:
#         name: Enumeration Nugets
#         path: src/output

#     # - name: Push to Nuget.org
#     #   if: ${{ github.event_name == 'push' }}
#     #   run: dotnet nuget push output/*.nupkg  --api-key ${{ secrets.NUGET_KEY }} --source https://api.nuget.org/v3/index.json