trigger:
  batch: true
  branches:
    include:
      - master

pr:
  autoCancel: true
  branches:
    include:
      - master
pool:
  vmImage: 'ubuntu-latest'

variables:
  BuildConfiguration: Release
  BuildPlatform: AnyCpu
  MajorVersion: '2'
  MinorVersion: '0'
  PatchVersion: $[counter(format('{0}.{1}', variables['Major'], variables['Minor']), 0)]
  ${{ if eq( variables['Build.SourceBranchName'], 'main') }}:
    PackageVersionType: ''
  ${{ if ne( variables['Build.SourceBranchName'], 'main') }}:
    PackageVersionType: '-pre-release'
  PackageVersion: $(MajorVersion).$(MinorVersion).$(PatchVersion)$(PackageVersionType)


steps:
- task: UseDotNet@2
  displayName: 'Install DotNet SDK 6'
  inputs:
    packageType: 'sdk'
    version: '6.0.x'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    projects: '**/Enumeration.sln'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '**/*.Tests'
    arguments: '--configuration $(BuildConfiguration) --no-build --collect:"XPlat Code Coverage" --settings $(Build.SourcesDirectory)/src/Coverlet.runsettings'

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'

- task: DotNetCoreCLI@2
  displayName: "dotnet pack"
  inputs:
    command: 'pack'
    arguments: '--configuration $(buildConfiguration) -p:PackageVersion=$(PackageVersion)'
    packagesToPack: '**/Enumeration.csproj;**/Enumeration.NewtonsoftJson.csproj;**/Enumeration.ModelBinder.csproj;**/Enumeration.SystemTextJson.csproj;**/Enumeration.NSwag.csproj'
    nobuild: true
    versioningScheme: byEnvVar
    versionEnvVar: PackageVersion

- task: PublishPipelineArtifact@1
  displayName: 'Publish Nuget Packages'
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)'
    artifact: 'Enumeration Packages'